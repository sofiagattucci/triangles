plugins {
    id 'java'
    id "com.diffplug.gradle.spotless" version "3.27.2"
    id 'org.unbroken-dome.test-sets' version '2.2.1'
    id 'jacoco'
}
testSets {
    integrationTest
}
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://jitpack.io"
        credentials {
            username "jp_cfbtoslbdr50e4pp4hljlsfohu"
        }
    }
}

dependencies {
    //testImplementation 'it.unimi.di.vec:extensions:1.0'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'

    testImplementation 'junit:junit:4.13'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.6.0'

    testImplementation 'org.assertj:assertj-core:3.15.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.0'

    implementation 'com.gitlab.sofiagattucci:triangles:0669be9d'
}

test {
    finalizedBy(jacocoTestReport)

    filter{
        //includeTestsMatching "*Integer"
    }
    useJUnitPlatform{
        //includeTags "TestTagged"
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
}

//def printJacocoCoverage(String xpath) {
//    def jacocoCoverage = new ByteArrayOutputStream()
//    exec {
//        commandLine 'xmllint','-html','-xpath', "//tfoot//td["+xpath+"]/text()", 'build/reports/jacoco/test/html/index.html'
//        standardOutput = jacocoCoverage
//        ignoreExitValue true
//    }
//    return jacocoCoverage.toString()
//}
jacocoTestReport {
//    doLast {
//        print "INSTRUCTIONS: " + printJacocoCoverage("3")
//        println " BRANCHES: " + printJacocoCoverage("5")
//    }
    reports {
        html.destination file("build/reports/jacoco/test/html/index.html")
    }
}


spotless {
    java {
        googleJavaFormat()
    }
}